services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:80
    depends_on:
      - user_api

  user_api:
    build:
      context: ./user-api
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/user
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      OTEL_SERVICE_NAME: user
      OTEL_EXPORTER_OTLP_ENDPOINT: http://lgtm:4317
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
      OTEL_RESOURCE_ATTRIBUTES: service.name=user,service.instance.id=user
      OTEL_LOGS_EXPORTER: "otlp"
      OTEL_METRIC_EXPORT_INTERVAL: 500
      OTEL_BSP_SCHEDULE_DELAY: 500
    ports:
      - 8080:8080
    depends_on:
      - db

  db:
    image: postgres:16.3
    environment:
      POSTGRES_DB: user
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./database:/docker-entrypoint-initdb.d/
    ports:
      - '5434:5432'
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -h localhost -p 5432 -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 10s
      retries: 60

  postman:
    build:
      context: ./newman
      dockerfile: Dockerfile
    command: |
      run demo.postman_collection.json
      -e environment.postman_environment.json
      -r cli,htmlextra --reporter-htmlextra-export reports/report.html
      --env-var "HOST=host.docker.internal:8080"
    volumes:
      - ./newman/reports:/etc/newman/reports
    depends_on:
      - user_api
  
  lgtm:
    # image: grafana/otel-lgtm:0.6.0
    build:
      context: ./grafana
      dockerfile: Dockerfile
    ports:
      - '4317:4317'
      - '4318:4318' 
      - '4000:3000' # dashboard

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    ports:
      - 9187:9187
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres@db:5432/user?sslmode=disable"
    depends_on :
      db:
        condition: service_healthy
